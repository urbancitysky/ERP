<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>